// <auto-generated />
using DiscountNotifierAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscountNotifierAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DiscountNotifierAPI.Models.Beacon", b =>
                {
                    b.Property<int>("BeaconId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BeaconId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("RegionId");

                    b.ToTable("Beacons");

                    b.HasData(
                        new
                        {
                            BeaconId = 1,
                            ManufacturerId = 2,
                            RegionId = 1
                        },
                        new
                        {
                            BeaconId = 2,
                            ManufacturerId = 2,
                            RegionId = 2
                        },
                        new
                        {
                            BeaconId = 3,
                            ManufacturerId = 1,
                            RegionId = 3
                        },
                        new
                        {
                            BeaconId = 4,
                            ManufacturerId = 1,
                            RegionId = 4
                        },
                        new
                        {
                            BeaconId = 5,
                            ManufacturerId = 3,
                            RegionId = 5
                        },
                        new
                        {
                            BeaconId = 6,
                            ManufacturerId = 3,
                            RegionId = 6
                        },
                        new
                        {
                            BeaconId = 7,
                            ManufacturerId = 4,
                            RegionId = 7
                        },
                        new
                        {
                            BeaconId = 8,
                            ManufacturerId = 4,
                            RegionId = 8
                        });
                });

            modelBuilder.Entity("DiscountNotifierAPI.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeaconId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("OfferText")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeaconId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeaconId = 1,
                            DiscountPercentage = 12m,
                            ImageUrl = "",
                            OfferText = "Pineapple",
                            OriginalPrice = "6"
                        },
                        new
                        {
                            Id = 2,
                            BeaconId = 1,
                            DiscountPercentage = 6m,
                            ImageUrl = "",
                            OfferText = "Oranges",
                            OriginalPrice = "9"
                        },
                        new
                        {
                            Id = 3,
                            BeaconId = 2,
                            DiscountPercentage = 12m,
                            ImageUrl = "",
                            OfferText = "Fresh express letuce",
                            OriginalPrice = "4"
                        },
                        new
                        {
                            Id = 4,
                            BeaconId = 2,
                            DiscountPercentage = 8m,
                            ImageUrl = "",
                            OfferText = "Spinach",
                            OriginalPrice = "7"
                        },
                        new
                        {
                            Id = 5,
                            BeaconId = 3,
                            DiscountPercentage = 2m,
                            ImageUrl = "",
                            OfferText = "Nectarines",
                            OriginalPrice = "12"
                        },
                        new
                        {
                            Id = 6,
                            BeaconId = 3,
                            DiscountPercentage = 5m,
                            ImageUrl = "",
                            OfferText = "Fresh seedless whole watermelon",
                            OriginalPrice = "11"
                        },
                        new
                        {
                            Id = 7,
                            BeaconId = 3,
                            DiscountPercentage = 7m,
                            ImageUrl = "",
                            OfferText = "Croissants",
                            OriginalPrice = "12"
                        },
                        new
                        {
                            Id = 8,
                            BeaconId = 4,
                            DiscountPercentage = 4m,
                            ImageUrl = "",
                            OfferText = "Brach's Jelly beans",
                            OriginalPrice = "20"
                        },
                        new
                        {
                            Id = 9,
                            BeaconId = 4,
                            DiscountPercentage = 8m,
                            ImageUrl = "",
                            OfferText = "Gastorade",
                            OriginalPrice = "22"
                        },
                        new
                        {
                            Id = 10,
                            BeaconId = 5,
                            DiscountPercentage = 20m,
                            ImageUrl = "",
                            OfferText = "Cranberry cocktail",
                            OriginalPrice = "21"
                        },
                        new
                        {
                            Id = 11,
                            BeaconId = 5,
                            DiscountPercentage = 7m,
                            ImageUrl = "",
                            OfferText = "Milk",
                            OriginalPrice = "10"
                        },
                        new
                        {
                            Id = 12,
                            BeaconId = 6,
                            DiscountPercentage = 15m,
                            ImageUrl = "",
                            OfferText = "Hi-c Fruit punch",
                            OriginalPrice = "13"
                        },
                        new
                        {
                            Id = 13,
                            BeaconId = 6,
                            DiscountPercentage = 16m,
                            ImageUrl = "",
                            OfferText = "Dial soap",
                            OriginalPrice = "25"
                        },
                        new
                        {
                            Id = 14,
                            BeaconId = 7,
                            DiscountPercentage = 9m,
                            ImageUrl = "",
                            OfferText = "Scotch Bite sponges",
                            OriginalPrice = "13"
                        },
                        new
                        {
                            Id = 15,
                            BeaconId = 7,
                            DiscountPercentage = 15m,
                            ImageUrl = "",
                            OfferText = "Organix Conditioner",
                            OriginalPrice = "25"
                        },
                        new
                        {
                            Id = 16,
                            BeaconId = 8,
                            DiscountPercentage = 3m,
                            ImageUrl = "",
                            OfferText = "US Weekly",
                            OriginalPrice = "2"
                        },
                        new
                        {
                            Id = 17,
                            BeaconId = 8,
                            DiscountPercentage = 12m,
                            ImageUrl = "",
                            OfferText = "Cococola",
                            OriginalPrice = "13"
                        },
                        new
                        {
                            Id = 18,
                            BeaconId = 1,
                            DiscountPercentage = 25m,
                            ImageUrl = "",
                            OfferText = "Laptop",
                            OriginalPrice = "250"
                        },
                        new
                        {
                            Id = 19,
                            BeaconId = 1,
                            DiscountPercentage = 10m,
                            ImageUrl = "",
                            OfferText = "Head phones",
                            OriginalPrice = "120"
                        });
                });

            modelBuilder.Entity("DiscountNotifierAPI.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            Name = "ABC"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            Name = "XYZ"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            Name = "KLM"
                        },
                        new
                        {
                            ManufacturerId = 4,
                            Name = "UVW"
                        });
                });

            modelBuilder.Entity("DiscountNotifierAPI.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegionName")
                        .HasColumnType("TEXT");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            RegionId = 1,
                            RegionName = "Grocery"
                        },
                        new
                        {
                            RegionId = 2,
                            RegionName = "Dairy"
                        },
                        new
                        {
                            RegionId = 3,
                            RegionName = "Fresh Produce"
                        },
                        new
                        {
                            RegionId = 4,
                            RegionName = "Life style"
                        },
                        new
                        {
                            RegionId = 5,
                            RegionName = "Kitchen Appliances"
                        },
                        new
                        {
                            RegionId = 6,
                            RegionName = "Kids' Wear"
                        },
                        new
                        {
                            RegionId = 7,
                            RegionName = "Men's Wear"
                        },
                        new
                        {
                            RegionId = 8,
                            RegionName = "Women's Wear"
                        });
                });

            modelBuilder.Entity("DiscountNotifierAPI.Models.Beacon", b =>
                {
                    b.HasOne("DiscountNotifierAPI.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiscountNotifierAPI.Models.Region", "AssociatedRegion")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociatedRegion");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("DiscountNotifierAPI.Models.Discount", b =>
                {
                    b.HasOne("DiscountNotifierAPI.Models.Beacon", "AssociatedBeacon")
                        .WithMany()
                        .HasForeignKey("BeaconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociatedBeacon");
                });
#pragma warning restore 612, 618
        }
    }
}
